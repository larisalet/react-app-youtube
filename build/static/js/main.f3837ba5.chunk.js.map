{"version":3,"sources":["components/SearchBar.js","apis/youtube.js","components/VideoItem.js","components/VideoList.js","components/VideoDetail.js","hooks/useVideos.js","components/App.js","index.js"],"names":["SearchBar","onFormSubmit","useState","term","setTerm","className","onSubmit","event","preventDefault","type","vlaue","onChange","target","value","axios","create","baseURL","params","part","maxResults","key","VideoItem","video","onVideoSelect","onClick","alt","snippet","title","src","thumbnails","medium","url","VideoList","videos","renderedList","map","id","viodeoId","VideoDetail","videoSrc","videoId","description","useVideos","defaultSearchTerm","setvideos","useEffect","search","a","youtube","get","q","response","data","items","App","selectedVideo","setSelectedVideo","ReactDOM","render","document","querySelector"],"mappings":"uKA6BeA,EA3BG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACjB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAUA,OACI,qBAAKC,UAAU,wBAAf,SACI,sBAAMC,SANG,SAACC,GACdA,EAAMC,iBACNP,EAAaE,IAIiBE,UAAU,UAApC,SACI,sBAAKA,UAAU,QAAf,UACI,iDACA,uBACII,KAAK,OACLC,MAAOP,EACPQ,SAhBE,SAACJ,GACnBH,EAAQG,EAAMK,OAAOC,kB,QCFbC,E,OAAAA,EAAMC,OAAO,CACzBC,QAAS,wCACTC,OAAQ,CACJC,KAAM,UACNT,KAAM,QACNU,WAAY,EACZC,IARI,6CCYGC,G,MAXG,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,cACxB,OACI,sBAAKC,QAAU,kBAAMD,EAAcD,IAAQjB,UAAU,kBAArD,UACI,qBAAKoB,IAAKH,EAAMI,QAAQC,MAAOtB,UAAU,WAAWuB,IAAKN,EAAMI,QAAQG,WAAWC,OAAOC,MACzF,qBAAK1B,UAAU,UAAf,SACI,qBAAKA,UAAU,SAAf,SAAyBiB,EAAMI,QAAQC,eCKxCK,EAVG,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,OAAQV,EAAoB,EAApBA,cACnBW,EAAeD,EAAOE,KAAI,SAACb,GAC7B,OAAO,cAAC,EAAD,CAAWC,cAAeA,EAAeD,MAAOA,GAAYA,EAAMc,GAAGC,aAGhF,OACI,qBAAKhC,UAAU,0BAAf,SAA2C6B,KCgBpCI,EAvBK,SAAC,GAAa,IAAZhB,EAAW,EAAXA,MAElB,IAAIA,EACA,OAAO,6CAGX,IAAMiB,EAAQ,wCAAoCjB,EAAMc,GAAGI,SAE3D,OACI,gCACI,qBAAKnC,UAAU,WAAf,SACI,wBAAQsB,MAAM,eAAeC,IAAKW,MAEtC,sBAAKlC,UAAU,aAAf,UACI,oBAAIA,UAAU,YAAd,SACKiB,EAAMI,QAAQC,QAEnB,4BAAIL,EAAMI,QAAQe,qB,wBCKnBC,EArBG,SAACC,GACf,MAA4BzC,mBAAS,IAArC,mBAAO+B,EAAP,KAAeW,EAAf,KAEAC,qBAAU,WACNC,EAAOH,KACP,CAACA,IAGL,IAAMG,EAAM,uCAAG,WAAO3C,GAAP,eAAA4C,EAAA,sEACYC,EAAQC,IAAI,UAAW,CAC1ChC,OAAQ,CACJiC,EAAG/C,KAHA,OACLgD,EADK,OAOXP,EAAUO,EAASC,KAAKC,OAPb,2CAAH,sDAUZ,MAAO,CAACpB,EAAQa,ICYLQ,EA1BH,WACR,MAA0CpD,mBAAS,MAAnD,mBAAOqD,EAAP,KAAsBC,EAAtB,KACA,EAAyBd,EAAU,WAAnC,mBAAOT,EAAP,KAAea,EAAf,KAMA,OAJAD,qBAAU,WACNW,EAAiBvB,EAAO,MACzB,CAACA,IAGA,sBAAK5B,UAAU,eAAf,UACI,cAAC,EAAD,CAAWJ,aAAc6C,IACzB,qBAAKzC,UAAU,UAAf,SACI,sBAAKA,UAAU,SAAf,UACI,qBAAKA,UAAU,qBAAf,SACI,cAAC,EAAD,CAAaiB,MAAOiC,MAExB,qBAAKlD,UAAU,mBAAf,SACI,cAAC,EAAD,CAAWkB,cAAeiC,EAAkBvB,OAAQA,eCpB5EwB,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,cAAc,Y","file":"static/js/main.f3837ba5.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\n\r\nconst SearchBar = ({ onFormSubmit }) => {\r\n    const [term, setTerm] = useState('');\r\n\r\n    const onInputChange = (event) => {\r\n        setTerm(event.target.value);\r\n    };\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        onFormSubmit(term);\r\n    };\r\n    return (\r\n        <div className=\"search-bar ui segment\">\r\n            <form onSubmit={onSubmit} className=\"ui form\">\r\n                <div className=\"field\">\r\n                    <label>Video Search</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        vlaue={term} \r\n                        onChange={onInputChange}\r\n                    />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchBar;","import axios from 'axios'\r\n\r\nconst KEY = 'AIzaSyAbYpo3Q6h4-rlig2yRXdUpXm0ePEt2WwI';\r\n\r\n export default axios.create({\r\n    baseURL: 'https://www.googleapis.com/youtube/v3',\r\n    params: {\r\n        part: 'snippet',\r\n        type: 'video',\r\n        maxResults: 5,\r\n        key: KEY\r\n    }\r\n });","import React from 'react';\r\nimport './VideoItem.css';\r\n\r\nconst VideoItem = ({ video, onVideoSelect}) => {\r\n    return(\r\n        <div onClick={ () => onVideoSelect(video)} className=\"video-item item\">\r\n            <img alt={video.snippet.title} className=\"ui image\" src={video.snippet.thumbnails.medium.url} />\r\n            <div className=\"content\">\r\n                <div className=\"header\">{video.snippet.title}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VideoItem;","import React from 'react';\r\nimport VideoItem from './VideoItem';\r\n\r\nconst VideoList = ({ videos, onVideoSelect }) => {\r\n    const renderedList = videos.map((video) => {\r\n        return <VideoItem onVideoSelect={onVideoSelect} video={video} key={video.id.viodeoId}/>;\r\n    });\r\n\r\n    return(\r\n        <div className=\"ui relaxed divided list\" >{renderedList}</div>\r\n    );\r\n};\r\n\r\nexport default VideoList;","import React from 'react';\r\n\r\nconst VideoDetail = ({video}) => {\r\n    \r\n    if(!video){\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    const videoSrc = `https://www.youtube.com/embed/${video.id.videoId}`;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"ui embed\">\r\n                <iframe title=\"video player\" src={videoSrc} />\r\n            </div>\r\n            <div className=\"ui segment\">\r\n                <h4 className=\"ui header\">\r\n                    {video.snippet.title}\r\n                </h4>\r\n                <p>{video.snippet.description}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VideoDetail;","import {useState,useEffect} from 'react';\r\nimport youtube from '../apis/youtube';\r\n\r\nconst useVideos = (defaultSearchTerm) => {\r\n    const [videos, setvideos] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        search(defaultSearchTerm);\r\n     }, [defaultSearchTerm]);\r\n \r\n\r\n    const search = async (term) => {\r\n        const response = await youtube.get('/search', {\r\n            params: {\r\n                q: term\r\n            }\r\n        });\r\n\r\n        setvideos(response.data.items);\r\n    };\r\n\r\n    return [videos, search];\r\n};\r\n\r\nexport default useVideos;","import React, { useState, useEffect } from 'react';\r\nimport SearchBar from './SearchBar';\r\nimport youtube from '../apis/youtube';\r\nimport VideoList from './VideoList';\r\nimport VideoDetail from './VideoDetail'\r\nimport useVideos from '../hooks/useVideos';\r\n\r\nconst App = () => {\r\n    const [selectedVideo, setSelectedVideo] = useState(null);\r\n    const [videos, search] = useVideos('reactjs');\r\n\r\n    useEffect(() => {\r\n        setSelectedVideo(videos[0])\r\n    }, [videos]);\r\n\r\n    return (\r\n        <div className=\"ui container\">\r\n            <SearchBar onFormSubmit={search} />\r\n            <div className=\"ui grid\">\r\n                <div className=\"ui row\">\r\n                    <div className=\"eleven wide column\">\r\n                        <VideoDetail video={selectedVideo}/>\r\n                    </div>\r\n                    <div className=\"five wide column\">\r\n                        <VideoList onVideoSelect={setSelectedVideo} videos={videos} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.querySelector('#root')\r\n);"],"sourceRoot":""}